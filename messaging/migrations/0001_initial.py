# Generated by Django 4.2.7 on 2025-09-14 10:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('properties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conversation_type', models.CharField(choices=[('direct', 'Direct Message'), ('group', 'Group Chat'), ('property_inquiry', 'Property Inquiry'), ('roommate_matching', 'Roommate Matching')], default='direct', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Optional title for group conversations', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'messaging_conversation',
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('image', 'Image'), ('file', 'File'), ('system', 'System Message'), ('property_share', 'Property Share'), ('profile_share', 'Profile Share')], default='text', max_length=20)),
                ('content', models.TextField(help_text='Message content or system message text')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='messaging/attachments/%Y/%m/')),
                ('attachment_name', models.CharField(blank=True, max_length=255)),
                ('attachment_size', models.PositiveIntegerField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='messaging.message')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('shared_profile', models.ForeignKey(blank=True, help_text='User profile being shared in this message', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile_shares', to=settings.AUTH_USER_MODEL)),
                ('shared_property', models.ForeignKey(blank=True, help_text='Property being shared in this message', null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.property')),
            ],
            options={
                'db_table': 'messaging_message',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('moderator', 'Moderator'), ('participant', 'Participant')], default='participant', max_length=20)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('can_add_participants', models.BooleanField(default=False)),
                ('can_remove_participants', models.BooleanField(default=False)),
                ('can_edit_conversation', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_muted', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='messaging.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_conversationparticipant',
            },
        ),
        migrations.CreateModel(
            name='ConversationInvite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, help_text='Optional invitation message')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(help_text='When this invite expires')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='messaging.conversation')),
                ('invitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_conversation_invites', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_conversation_invites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_conversationinvite',
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='participants',
            field=models.ManyToManyField(related_name='conversations', through='messaging.ConversationParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conversation',
            name='property_listing',
            field=models.ForeignKey(blank=True, help_text='Property this conversation is about (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='properties.property'),
        ),
        migrations.CreateModel(
            name='MessageReadReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_receipts', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_messagereadreceipt',
                'indexes': [models.Index(fields=['message', 'read_at'], name='messaging_m_message_0100e4_idx'), models.Index(fields=['user', 'read_at'], name='messaging_m_user_id_55bf4d_idx')],
                'unique_together': {('message', 'user')},
            },
        ),
        migrations.CreateModel(
            name='MessageReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_type', models.CharField(choices=[('like', 'üëç'), ('love', '‚ù§Ô∏è'), ('laugh', 'üòÇ'), ('wow', 'üòÆ'), ('sad', 'üò¢'), ('angry', 'üò†')], max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messaging_messagereaction',
                'indexes': [models.Index(fields=['message', 'reaction_type'], name='messaging_m_message_c0486f_idx'), models.Index(fields=['user', 'created_at'], name='messaging_m_user_id_223455_idx')],
                'unique_together': {('message', 'user', 'reaction_type')},
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messaging_m_convers_7bc91b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'created_at'], name='messaging_m_sender__277197_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='messaging_m_message_9677d2_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at'], name='messaging_m_created_d51bc4_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['user', 'is_active'], name='messaging_c_user_id_ac23f5_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['conversation', 'joined_at'], name='messaging_c_convers_7b3a6a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationparticipant',
            unique_together={('conversation', 'user')},
        ),
        migrations.AddIndex(
            model_name='conversationinvite',
            index=models.Index(fields=['invitee', 'status'], name='messaging_c_invitee_0790f1_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationinvite',
            index=models.Index(fields=['status', 'expires_at'], name='messaging_c_status_efd886_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationinvite',
            index=models.Index(fields=['created_at'], name='messaging_c_created_a45631_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationinvite',
            unique_together={('conversation', 'invitee')},
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['conversation_type', 'is_active'], name='messaging_c_convers_6a9ad5_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['last_message_at'], name='messaging_c_last_me_87f299_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['created_at'], name='messaging_c_created_ab9bdf_idx'),
        ),
    ]
