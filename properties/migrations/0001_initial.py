# Generated by Django 4.2.7 on 2025-09-14 02:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Property listing title', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the property')),
                ('property_type', models.CharField(choices=[('house', 'House'), ('apartment', 'Apartment'), ('townhouse', 'Townhouse'), ('studio', 'Studio'), ('room', 'Single Room'), ('granny_flat', 'Granny Flat')], max_length=30)),
                ('address', models.CharField(max_length=300)),
                ('suburb', models.CharField(max_length=100)),
                ('state', models.CharField(choices=[('NSW', 'New South Wales'), ('VIC', 'Victoria'), ('QLD', 'Queensland'), ('WA', 'Western Australia'), ('SA', 'South Australia'), ('TAS', 'Tasmania'), ('NT', 'Northern Territory'), ('ACT', 'Australian Capital Territory')], max_length=20)),
                ('postcode', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('bedrooms', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('bathrooms', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('car_spaces', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('total_rooms', models.PositiveIntegerField(blank=True, null=True)),
                ('rent_per_week', models.DecimalField(decimal_places=2, max_digits=8)),
                ('bond_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rent_includes', models.JSONField(default=list, help_text="List of what's included in rent")),
                ('additional_costs', models.JSONField(default=dict, help_text='Additional costs like utilities')),
                ('available_from', models.DateField()),
                ('available_until', models.DateField(blank=True, help_text='Leave empty for ongoing', null=True)),
                ('min_lease_term', models.PositiveIntegerField(default=12, help_text='Minimum lease term in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('max_lease_term', models.PositiveIntegerField(blank=True, help_text='Maximum lease term in months', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('furnished', models.CharField(choices=[('unfurnished', 'Unfurnished'), ('semi_furnished', 'Semi-furnished'), ('fully_furnished', 'Fully Furnished')], default='unfurnished', max_length=20)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('features', models.JSONField(default=list, help_text='List of property features')),
                ('appliances', models.JSONField(default=list, help_text='List of included appliances')),
                ('public_transport', models.JSONField(default=dict, help_text='Public transport information')),
                ('internet_included', models.BooleanField(default=False)),
                ('rooms_available', models.PositiveIntegerField(default=1, help_text='Number of rooms available for rent', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('current_occupants', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(20)])),
                ('max_occupants', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('agency', models.CharField(blank=True, max_length=100, null=True)),
                ('listing_agent', models.CharField(blank=True, max_length=100, null=True)),
                ('external_id', models.CharField(blank=True, help_text='External listing ID', max_length=50, null=True)),
                ('source_website', models.CharField(blank=True, max_length=100, null=True)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='properties_added', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
                'db_table': 'properties_property',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('indoor', 'Indoor Features'), ('outdoor', 'Outdoor Features'), ('transport', 'Transport'), ('utilities', 'Utilities'), ('security', 'Security'), ('lifestyle', 'Lifestyle')], max_length=20)),
                ('icon', models.CharField(blank=True, help_text='Bootstrap icon class', max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'properties_propertyamenity',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RoomListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('single', 'Single Room'), ('double', 'Double Room'), ('master', 'Master Room'), ('ensuite', 'Room with Ensuite'), ('shared', 'Shared Room')], max_length=30)),
                ('size_sqm', models.PositiveIntegerField(blank=True, help_text='Room size in square meters', null=True)),
                ('has_ensuite', models.BooleanField(default=False)),
                ('has_balcony', models.BooleanField(default=False)),
                ('has_built_in_wardrobe', models.BooleanField(default=False)),
                ('rent_per_week', models.DecimalField(decimal_places=2, max_digits=6)),
                ('bond_weeks', models.PositiveIntegerField(default=4, help_text='Bond in weeks of rent')),
                ('available_from', models.DateField()),
                ('is_available', models.BooleanField(default=True)),
                ('furnished', models.BooleanField(default=False)),
                ('includes_utilities', models.BooleanField(default=False)),
                ('features', models.JSONField(default=list, help_text='Room-specific features')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_occupant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_rooms', to=settings.AUTH_USER_MODEL)),
                ('property_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_listings', to='properties.property')),
            ],
            options={
                'db_table': 'properties_roomlisting',
                'ordering': ['rent_per_week'],
            },
        ),
        migrations.CreateModel(
            name='PropertySavedSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="User's name for this search", max_length=100)),
                ('suburbs', models.JSONField(default=list)),
                ('min_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('max_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('min_bedrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('max_bedrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('property_types', models.JSONField(default=list)),
                ('pets_allowed', models.BooleanField(blank=True, null=True)),
                ('furnished', models.CharField(blank=True, max_length=20)),
                ('available_from', models.DateField(blank=True, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('notification_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest')], default='daily', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_notification_sent', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_searches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'properties_propertysavedsearch',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('max_attendees', models.PositiveIntegerField(default=10)),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('property_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='properties.property')),
                ('registered_users', models.ManyToManyField(blank=True, related_name='property_inspections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'properties_propertyinspection',
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='properties/images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('property_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.property')),
            ],
            options={
                'db_table': 'properties_propertyimage',
                'ordering': ['order', 'uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='property',
            name='amenities',
            field=models.ManyToManyField(blank=True, related_name='properties', to='properties.propertyamenity'),
        ),
        migrations.AddField(
            model_name='property',
            name='favorited_by',
            field=models.ManyToManyField(blank=True, related_name='favorite_properties', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['suburb', 'state'], name='properties__suburb_2901f5_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['rent_per_week'], name='properties__rent_pe_929be2_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['available_from'], name='properties__availab_704311_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['bedrooms', 'bathrooms'], name='properties__bedroom_446002_idx'),
        ),
    ]
